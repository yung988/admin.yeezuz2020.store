// Test script pro Packeta API
require('dotenv').config({ path: '.env.local' });
const axios = require('axios');

const packetaApi = axios.create({
  baseURL: process.env.PACKETA_BASE_URL,
  headers: {
    'Content-Type': 'application/x-www-form-urlencoded',
  },
});

// Testovac√≠ √∫daje (FIKTIVN√ç!)
const testOrderData = {
  orderNumber: `TEST-${Date.now()}`,
  customerName: 'Jan',
  customerSurname: 'Testovac√≠',
  customerEmail: 'test@example.com',
  customerPhone: '+420123456789',
  pickupPointId: '79', // Praha 1 - testovac√≠ v√Ωdejn√≠ m√≠sto
  orderValue: 1500, // 15 Kƒç
  weight: 1.0, // 1 kg
  cashOnDelivery: 0, // bez dob√≠rky
};

async function testCreatePacketaShipment() {
  try {
    console.log('üöÄ Testov√°n√≠ vytvo≈ôen√≠ z√°silky...');
    console.log('üì¶ Testovac√≠ data:', testOrderData);
    
    const response = await packetaApi.post('/packet', {
      apiPassword: process.env.PACKETA_API_PASSWORD,
      packetAttributes: {
        number: testOrderData.orderNumber,
        name: testOrderData.customerName,
        surname: testOrderData.customerSurname,
        email: testOrderData.customerEmail,
        phone: testOrderData.customerPhone,
        addressId: testOrderData.pickupPointId,
        cod: testOrderData.cashOnDelivery,
        value: testOrderData.orderValue,
        weight: testOrderData.weight,
        adultContent: 0,
        eshop: process.env.PACKETA_SENDER_ID || 'test-eshop'
      }
    });
    
    console.log('‚úÖ √öspƒõch! Odpovƒõƒè API:');
    console.log(JSON.stringify(response.data, null, 2));
    
    if (response.data.status === 'ok') {
      console.log(`üéâ Z√°silka vytvo≈ôena s ID: ${response.data.id}`);
      return response.data.id;
    } else {
      console.log('‚ùå Chyba v odpovƒõdi:', response.data.fault);
    }
    
  } catch (error) {
    console.error('üí• Chyba p≈ôi vol√°n√≠ API:');
    console.error('Status:', error.response?.status);
    console.error('Data:', error.response?.data);
    console.error('Message:', error.message);
  }
}

async function testGetPacketStatus(packetId) {
  try {
    console.log(`üîç Testov√°n√≠ stavu z√°silky ${packetId}...`);
    
    const response = await packetaApi.get('/packet-status', {
      params: {
        apiPassword: process.env.PACKETA_API_PASSWORD,
        packetId: packetId,
      }
    });
    
    console.log('‚úÖ Stav z√°silky:');
    console.log(JSON.stringify(response.data, null, 2));
    
  } catch (error) {
    console.error('üí• Chyba p≈ôi kontrole stavu:');
    console.error('Status:', error.response?.status);
    console.error('Data:', error.response?.data);
  }
}

async function runTests() {
  console.log('üß™ PACKETA API TEST');
  console.log('==================');
  console.log(`API URL: ${process.env.PACKETA_BASE_URL}`);
  console.log(`API Key: ${process.env.PACKETA_API_KEY ? 'SET' : 'NOT SET'}`);
  console.log(`Sender ID: ${process.env.PACKETA_SENDER_ID}`);
  console.log('');
  
  // Test 1: Vytvo≈ôen√≠ z√°silky
  const packetId = await testCreatePacketaShipment();
  
  // Test 2: Kontrola stavu (pokud se z√°silka vytvo≈ôila)
  if (packetId) {
    console.log('');
    await testGetPacketStatus(packetId);
  }
  
  console.log('');
  console.log('üèÅ Test dokonƒçen');
}

// Spus≈• testy
runTests().catch(console.error);
